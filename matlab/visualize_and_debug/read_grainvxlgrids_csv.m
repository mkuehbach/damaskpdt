function [GrainID, BoxXYZMinXYZSz] = importfile(filename, startRow, endRow)

%[GrainID,BoxXMin,BoxXMax,BoxYMin,BoxYMax,BoxZMin,BoxZMax] = importfile(filename, startRow, endRow)
%[GrainID,Reconstructed,GridMetaDataNX,NY,NZ,NXY,NXYZ,dcell,OrgX,OrgY,OrgZ,BoxXMin,BoxXMax,BoxYMin,BoxYMax,BoxZMin,BoxZMax] = importfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [GRAINID,RECONSTRUCTED,GRIDMETADATANX,NY,NZ,NXY,NXYZ,DCELL,ORGX,ORGY,ORGZ,BOXXMIN,BOXXMAX,BOXYMIN,BOXYMAX,BOXZMIN,BOXZMAX]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [GRAINID,RECONSTRUCTED,GRIDMETADATANX,NY,NZ,NXY,NXYZ,DCELL,ORGX,ORGY,ORGZ,BOXXMIN,BOXXMAX,BOXYMIN,BOXYMAX,BOXZMIN,BOXZMAX]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [GrainID,Reconstructed,GridMetaDataNX,NY,NZ,NXY,NXYZ,dcell,OrgX,OrgY,OrgZ,BoxXMin,BoxXMax,BoxYMin,BoxYMax,BoxZMin,BoxZMax] = importfile('DAMASKPDT.SimID.0.Incr.0.GrainVxlGrids.csv',4, 12);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/04/26 14:16:47

%% Initialize variables.
delimiter = ';';
if nargin<=2
    startRow = 4;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%   column18: double (%f)
%   column19: double (%f)
%   column20: double (%f)
%   column21: double (%f)
%   column22: double (%f)
%   column23: double (%f)
%   column24: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
GrainID = dataArray{:, 1};
%UIPCnt = dataArray{:,2};
%VxlInside = dataArray{:,3};
%EqvSphere = dataArray{:,4};
%InsideVsUIPCnt = dataArray{:,5};
%Reconstructed = dataArray{:, 6};
%GridMetaDataNX = dataArray{:, 7};
%NY = dataArray{:, 8};
%NZ = dataArray{:, 9};
%NXY = dataArray{:, 10};
%NXYZ = dataArray{:, 11};
%OrgDiscrX = dataArray{:, 12};
%OrgDiscrY = dataArray{:, 13};
%OrgDiscrZ = dataArray{:, 14};
%dcell = dataArray{:, 15};
%OrgContX = dataArray{:, 16};
%OrgContY = dataArray{:, 17};
%OrgContZ = dataArray{:, 18};
BoxXYZMinXYZSz(:,1) = dataArray{:,19};
BoxXYZMinXYZSz(:,2) = dataArray{:,21};
BoxXYZMinXYZSz(:,3) = dataArray{:,23};
BoxXYZMinXYZSz(:,4) = dataArray{:,20}-dataArray{:,19};
BoxXYZMinXYZSz(:,5) = dataArray{:,22}-dataArray{:,21};
BoxXYZMinXYZSz(:,6) = dataArray{:,24}-dataArray{:,23};

%BoxXMin = dataArray{:, 13};
%BoxXMax = dataArray{:, 14};
%BoxYMin = dataArray{:, 15};
%BoxYMax = dataArray{:, 16};
%BoxZMin = dataArray{:, 17};
%BoxZMax = dataArray{:, 18};

end
